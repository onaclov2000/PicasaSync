import gdata.photos.service
import gdata.media
import gdata.geo
import urllib
import urllib2


gd_client_destination = gdata.photos.service.PhotosService()
gd_client_destination.email = '' # email
gd_client_destination.password = ''# -- password
gd_client_destination.source = 'SyncPicasaAlbum'
gd_client_destination.ProgrammaticLogin()


gd_client_source = gdata.photos.service.PhotosService()
gd_client_source.email = '' #insert email here
gd_client_source.password = ''# password here
gd_client_source.source = 'SyncPicasaAlbum'
gd_client_source.ProgrammaticLogin()

Destination_Album_Exists = 0
Source_Album_Exists = 0

albums = gd_client_destination.GetUserFeed(user=gd_client_destination.email)

for album in albums.entry:
  print album.summary.text
  if album.title.text == '': #'Album Name You Want To Sync From':
   Destination_Album_Exists = 1
   Destination_Album = album
   print 'title: %s, number of photos: %s, id: %s' % (album.title.text,
      album.numphotos.text, album.gphoto_id.text)

albums = gd_client_source.GetUserFeed(user=gd_client_source.email)
for album in albums.entry:
   print album.summary.text
   if album.title.text == #'Album Name You Want To Sync To'
      Source_Album_Exists = 1
      Source_Album = album    
      print 'title: %s, number of photos: %s, id: %s' % (album.title.text,
         album.numphotos.text, album.gphoto_id.text)

if Source_Album_Exists == 1:
   print "Right Side Album Contents\n"
   photos = gd_client_source.GetFeed(
   '/data/feed/api/user/%s/albumid/%s?kind=photo' % (
     gd_client_source.email, Source_Album.gphoto_id.text))
   if Destination_Album_Exists == 0:
      Destination_Album = gd_client_destination.InsertAlbum(title=Source_Album.title.text, summary='Autogenerated via PicasaAlbumSync')
      print "Created Album"
   for photo in photos.entry:
      source = set(photos.entry)
      print 'Photo title:', photo.title.text
      # this I'm really not sure what it does behind the scenes, I assume it 'caches' the picture
      photoUrl = urllib2.urlopen(photo.GetMediaURL())
      album_url = '/data/feed/api/user/%s/albumid/%s' % (gd_client_destination.email, Source_Album.gphoto_id.text)
      updated_photo = gd_client_destination.InsertPhotoSimple(Destination_Album, photo.title.text, 
      '', photoUrl, content_type='image/jpeg')

else:
   print "No Album on the Right Side\n\n\n"




